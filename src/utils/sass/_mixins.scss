@use "sass:list";
@use "sass:map";

@mixin full-width {
  margin-inline: $gutter-small * -1;
  padding-inline: $gutter-small;

  @include bp($bp-tablet-horizontal) {
    margin-inline: $gutter-large * -1;
    padding-inline: $gutter-large;
  }
}

@mixin transition($timing: $transition-timing) {
  transition: all $timing $transition-curve, outline 0s linear, outline-offset 0s linear, text-shadow 0s linear;

  @media (prefers-reduced-motion) {
    transition: none;
  }
}

@mixin visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

@mixin visually-hidden-off {
  clip: initial;
  clip-path: initial;
  height: initial;
  width: initial;
  overflow: initial;
  position: initial;
  white-space: initial;
}

@mixin link-base {
  @include transition;

  color: var(--link);
  text-decoration: none;
  position: relative;
  font-weight: 400;
  background-repeat: no-repeat;
  background-image: linear-gradient(to right, var(--link) 0, var(--link) 100%);
  background-size: calc(100% - 5px) 1px;
  background-position: bottom right;
}

@mixin link-hover-or-focus {
  background-image: linear-gradient(to right, var(--link-decoration) 0, var(--link-decoration) 100%);
  background-size: 100% 1px;
  color: var(--link-hover);
}

@mixin focus-visible {
  outline: 2px solid var(--a11y);
  outline-offset: 2px;
}

@mixin link {
  @include link-base;

  &:hover,
  &:focus {
    @include link-hover-or-focus;
  }

  &:focus-visible {
    @include focus-visible;

    background-image: none;
  }
}

@mixin text-mask($color, $blur: 1px) {
  text-shadow:
    0px 0px $blur $color,
    0px -1px $blur $color,
    0px -2px $blur $color,
    0px 1px $blur $color,
    0px 2px $blur $color,
    -1px 0px $blur $color,
    -1px -1px $blur $color,
    -1px 1px $blur $color,
    1px 0px $blur $color,
    1px -1px $blur $color,
    1px 1px $blur $color,
    -2px 0px $blur $color,
    -2px -1px $blur $color,
    -2px -2px $blur $color,
    -2px 1px $blur $color,
    -2px 2px $blur $color,
    2px 0px $blur $color,
    2px -1px $blur $color,
    2px -2px $blur $color,
    2px 1px $blur $color,
    2px 2px $blur $color;
}

@function color($family, $hue) {
  @debug map.get($colors, $family);
  @return list.nth(map.get($colors, $family), $hue);
}
